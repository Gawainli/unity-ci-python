# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

build-android-ch:
  stage: build
  script:
    - export UNITY_EXECUTABLE="${UNITY_2020}"
    - cd /Users/feimo/cwcx/unity-ci
    - source ./env_macos_unity_ci/bin/activate
    - /opt/homebrew/bin/python3.10 build_app.py cfg/cwcx_android.ini

build-bundles-ch:
  stage: build
  script:
    - cd /Users/feimo/cwcx/unity-ci
    - source ./env_macos_unity_ci/bin/activate
    - /opt/homebrew/bin/python3.10 build_yoo_bundles.py cfg/cwcx_bundles_mac.ini
  tags:
    - unity
    - mac
    - cwcx
  when: manual

test-env:
  stage: build
  script:
    - echo $PATH
    - echo $UNITY_2020
    - export UNITY_EXECUTABLE="${UNITY_2020}"
    - echo $UNITY_EXECUTABLE
  tags:
    - unity
    - mac
    - cwcx
  when: manual